@CHARSET "UTF-8";
/**
 * Set margin top on all elements, except first child
 * See: https://alistapart.com/article/axiomatic-css-and-lobotomized-owls
 */
* {
    margin: 0;
    padding: 0;
}

* + * {
    margin-top: 1.5rem;
}

.compact * + * {
    margin-top: 0.65rem;
}

.margins-off > * {
    margin-top: 0; /* Note: this is for all children. */
}

/**
 * Needed for third-party elements, e.g. Google Maps, which do not like the setup above
 */
.margins-initial * {
    margin-top: initial;
}

/**
 * Colors, and other variables used on the site;
 * Colors taken from Google's material design
 * https://www.materialpalette.com/
 */
:root {
    --primary: hsl(231, 45%, 55%);
    --primary-darker: hsl(231, 45%, 40%);
    --primary-dark: hsl(231, 45%, 25%);
    --primary-lighter: hsl(231, 60%, 70%);
    --primary-light: hsl(231, 70%, 90%);

    --text-dark: hsl(0, 0%, 10%);
    --text-light: hsl(0, 0%, 90%);
    --secondary-text: hsl(0, 0%, 50%);

    --input-bg: hsla(0,0%,75%,.5);

	--button-shadow: hsla(0, 0%, 10%, .5);

    --content-box-bg: hsl(0, 0%, 100%);

    --site-bg: hsl(0, 0%, 30%);

    --success: hsl(120, 50%, 60%);
    --error: hsl(349, 80%, 40%);
	--error-darker: hsl(349, 85%, 30%);
    --info: var(--primary-light);
    --warning: hsl(35, 100%, 50%);
}

.info {
    background-color: var(--info);
    color: var(--text-dark);
}

.success {
    background-color: var(--success);
    color: var(--text-dark);
}

.error {
    background-color: var(--error);
    color: var(--text-light);
}

.warning {
    background-color: var(--warning);
    color: var(--text-dark)
}

html {
    height: 100vh;
    font-size: larger;
}

body {
    background-color: var(--site-bg);
    min-height: 100%; /* 100% of html's 100vh */
}

/************************************************************
	Most basic CSS Grid layout
	Basically every page will overwrite this
*************************************************************/
body.grid {
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto auto 1fr auto;
    grid-template-areas: "header" "feedback" "content" "footer";
}

.site-header {
    grid-area: header;
}

.feedback {
    grid-area: feedback;
}

.main-body-container {
    grid-area: content;
}

.site-footer {
    grid-area: footer;
}

/************************************************************
	More layout stuff
	Content containers
*************************************************************/
.main-body-container {
    width: 100%;
    max-width: 50rem;
    justify-self: center;

    display: flex;
    flex-direction: column;
    align-content: space-evenly;
    justify-content: space-evenly;
}

.box {
    display: flex;
    flex-direction: column;
    align-content: space-evenly;
    justify-content: space-evenly;

    background: var(--content-box-bg);
    padding: 1.5rem;
    border-radius: .2rem;
}

/************************************************************
	Button
*************************************************************/
/* Display settings */
.button {
    display: flex;
    justify-content: center; /* Horizontal align */
    align-items: center; /* Vertical align */

    padding: 1rem;
    width: 100%;
    min-width: 25rem;
    border: 0;
	border-radius: .2rem;

    box-shadow: 0 .1rem 0 0 var(--button-shadow);
}

/* Colours */
.button {
    background-color: var(--primary);
    color: var(--text-light);
}

.button:hover, .button.hover {
    background-color: var(--primary-darker);
    color: var(--text-light);
}

.button:active, .button.active {
    background-color: var(--primary-dark);
    color: var(--text-light);
    box-shadow: 0 0 0 0;
}

/* Colours */
.button.red {
	background-color: var(--error);
	color: var(--text-light);
}

.button.red:hover, .button.red.hover {
	background-color: var(--error-darker);
	color: var(--text-light);
}

.button.red:active, .button.red.active {
	background-color: var(--error-darker);
	color: var(--text-light);
}

.button:disabled {
    filter: grayscale(70%);
}

/************************************************************
	Feedback
*************************************************************/
.feedback {
    width: 100%;
    font-weight: bold;
}

.feedback:empty {
    display: none;
}

.feedback > p {
    padding: 1rem 5rem;
}

/************************************************************
	Smaller stuff
*************************************************************/
.side-note {
    font-size: 90%;
    font-style: oblique;
}

[hidden],
.hidden {
    display: none;
}

.loading {
	border: .5rem solid;
	border-color: transparent var(--primary-lighter);
	border-radius: 100%;
	width: 2rem;
	height: 2rem;
	animation: spin 2s ease-in-out infinite;
	margin: auto;
}
@keyframes spin {
	0% { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}

/************************************************************
	Form stuff
*************************************************************/
form label {
    display: block;
    border-radius: .2rem;
}

form input {
    display: block;
    padding: 1rem;
    width: 100%;

    background-color: var(--input-bg);
    border: 0;
    border-radius: .2rem;
}

form span.required:after {
    content: " *";
    color: var(--error);
}

form input:required,
form p.required-input {
    box-shadow: -.2rem 0 0 0 var(--error);
}

/************************************************************
	Debug
*************************************************************/
.debug * {
	outline: 1px dashed hsla(0,50%,50%,1);
    background-color: hsla(0,50%,50%,.1);
}
.debug * * {
	outline: 1px dashed  hsla(120,50%,50%,1);
    background-color: hsla(120,50%,50%,.1);
}
.debug * * * {
	outline: 1px dashed  hsla(230,50%,50%,1);
    background-color: hsla(230,50%,50%,.1);
}
.debug * * * * {
	outline: 1px dashed hsla(40,50%,50%,1);
    background-color: hsla(40,50%,50%,.1);
}
.debug * * * * * {
	outline: 1px dashed hsla(280,50%,50%,1);
    background-color: hsla(280,50%,50%,.1);
}